 function [A_id_cell,B_id_cell,est_err_cell,sol_found_cell] = net_rec_ls_iv(Meas_mtx,B_mtx,Constr_mtx,...
     num_tps_4exp)
  
% The function computes the connectivity matrices obtained by LS and LS-IV 
% (LS with IV).  
% The procedure allows imposing the desired zero entries of the 
% connectivity matrix A and of the input matrix B. 
% If no information is available on A and B, then the input variables B_mtx 
% and Constr_mtx are empty (see below). 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% INPUT VARIABLES
%
%
% Meas_mtx:     Measurements matrix, each column contains the measurements for
%               a node
%
% B_mtx:        Matrix that contains the information about the b-coefficients
%               to be nullified
%               
%
% Constr_mtx:   Matrix with 3 columns.
%               Constraints to be imposed on the matrix A coefficients; the
%               first column --> row-index of the constrained coefficient;
%               second column --> column-index of the constrained coefficient;
%               third column --> type of constraint:
%                                   0 --> null coefficient constraint
%
%
%  
% num_tps_4exp:   a vector containing the number of time points for each 
%                 experiment (time-series),  num_tps_4exp(i)= number of
%                 time points for the i-th time-series. The number of rows
%                 of Meas_mtx is equal to sum(num_tps_4exp).
%
%
% OUTPUT VARIABLES
%
% A_id_cell:      cell array containing the identified connectivity matrices, 
%                 for LS (A_id_cell{1,1}) and LS-IV (A_id_cell{1,2}) 
%               
%
% B_id_cell:      The identified input matrices for LS (B_id_cell{1,1}) and 
%                 LS-IV (B_id_cell{1,2})
%                 
%
% est_err_cell:   cell array containing the estimation error generated by the
%                 identified models (LS, est_err_cell{1,1}; LS-IV, est_err_cell{1,2}) 
%
% sol_found_cell: cell array containing a flag (1 or 0) on the stability of 
%                 the identified system, determining the mode 
%                 for obtaining the simulated data matrix (see ls_iv.m
%                 function);
%                 sol_found_cell{1,1} for LS, sol_found_cell{1,2} for LS-IV 
%                                      %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


[~,n_nodes]=size(Meas_mtx);

if isempty(Constr_mtx)
    null_constr_list=[];
else
    % List of null coefficient constraints, row and column indexes
    null_constr_list=Constr_mtx(find(Constr_mtx(:,3)==0),1:2);
    % List of sign coefficient constraints, row and column indexes
end

%Find the b-coefficients to be nullified 
for idx=1:size(B_mtx,2)
    B_vct=B_mtx(:,idx);
    if not(isempty(B_vct))
        for idx1=1:n_nodes
            if not(B_vct(idx1))
                null_constr_list_old=null_constr_list;
                null_constr_list=[null_constr_list_old; idx1 n_nodes+idx ];
                clear null_constr_list_old
            end
        end
    end
end


% first identification - LS without using the IV procedure, the second 
% input (Meas_mtx_pr) of the function ls_iv is equal to the first input (Meas_mtx):
% Meas_mtx_pr=Meas_mtx;

[A_id_0,B_id_0,norm_est_err_dy_0,sol_found_0,Meas_sim_0] = ls_iv(Meas_mtx,Meas_mtx,...
    null_constr_list,num_tps_4exp);

%store the identification by LS
A_id_cell{1,1}=A_id_0;
B_id_cell{1,1}=B_id_0;
est_err_cell{1,1}=norm_est_err_dy_0;
sol_found_cell{1,1}=sol_found_0;


no_ljung=false;
% number of iterations for IV algorithm
num_id_by_IV=3;
% the dynamic order of the AR model for the residuals
ord_ar_no_model=10;

Meas_sim_pr=Meas_sim_0;
for num_it_IV=1:num_id_by_IV
    [A_id_1,B_id_1,norm_est_err_dy_1,sol_found_1,Meas_sim_1,Err_mtx] = ls_iv(Meas_mtx,Meas_sim_pr,...
    null_constr_list,num_tps_4exp);


    if no_ljung
        Meas_sim_flt=Meas_sim_1;
    else
        Meas_sim_flt=ljung_mthd_ls(Meas_sim_1,Err_mtx,num_tps_4exp,ord_ar_no_model);
    end
    
    Meas_sim_pr=Meas_sim_flt;
end

%store the identification by LS-IV
A_id_cell{1,2}=A_id_1;
B_id_cell{1,2}=B_id_1;
est_err_cell{1,2}=norm_est_err_dy_1;
sol_found_cell{1,2}=sol_found_1;
